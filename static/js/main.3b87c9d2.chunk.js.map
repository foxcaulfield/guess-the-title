{"version":3,"sources":["components/Title/Title.js","utils/randomInteger.js","store/reducers/fieldReducer.js","components/Field/Field.js","store/reduxStore.js","App.js","reportWebVitals.js","index.js"],"names":["Title","props","console","log","useState","show","setShow","handleClose","handleShow","isWin","destination","value","style","alignSelf","justifySelf","Button","width","height","flex","justifyContent","alignItems","fontSize","variant","isDestination","attempt","size","disabled","isMarker","onClick","e","handleAttempt","isGameStarted","Modal","onHide","Header","closeButton","Body","Footer","getRandomIntInclusive","min","max","Math","ceil","floor","random","RESET_MARKER_POSITION","ADD_COLUMNS_ACTION_CREATOR","ADD_ROWS_ACTION_CREATOR","REMOVE_COLUMNS_ACTION_CREATOR","REMOVE_ROWS_ACTION_CREATOR","MOVE_MARKER_ACTION_CREATOR","initialState","fieldSizeX","fieldSizeY","markerPosition","destinationPosition","numberOfMoves","markerMoves","isGameOver","fieldReducer","state","action","type","posX","posY","destPos","slice","moves","i","move","push","FieldContainer","styled","div","connect","dispatch","resetMarkerPosition","addColumns","addRows","removeColumns","removeRows","moveMarker","setGameStarted","setAttempt","titles","y","x","join","className","map","title","store","createStore","window","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b87c9d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction Title(props) {\r\n  console.log(props);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  let isWin = props.destination === props.value;\r\n  return (\r\n    <div style={{ alignSelf: \"center\", justifySelf: \"center\" }}>\r\n      <Button\r\n        style={{\r\n          width: 80,\r\n          height: 40,\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          fontSize: \"1em\",\r\n        }}\r\n        variant={props.isDestination && !props.attempt ? \"info\" : \"warning\"}\r\n        size=\"lg\"\r\n        disabled={props.attempt ? false : true}\r\n        isMarker={props.isMarker}\r\n        onClick={\r\n          props.destination === props.value\r\n            ? (e) => {\r\n                props.handleAttempt();\r\n                handleShow();\r\n              }\r\n            : (e) => {\r\n                props.handleAttempt();\r\n                handleShow();\r\n              }\r\n        }\r\n        isGameStarted={props.isGameStarted}\r\n        isWin={isWin}\r\n        attempt={props.attempt}\r\n      >\r\n        {/* {props.value} */}\r\n        {props.isMarker ? \"üèÅ\" : \"\"}\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Info</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.destination === props.value\r\n            ? \"Right! click 'Start new game!' to start a new game\"\r\n            : `Oops, you failed! Right answer is marked by green color. Click 'Start new game!' to start a new game`}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","export function getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.ceil(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import { getRandomIntInclusive } from \"../../utils/randomInteger\";\r\n\r\nconst RESET_MARKER_POSITION = \"RESET_MARKER_POSITION\";\r\nconst ADD_COLUMNS_ACTION_CREATOR = \"ADD_COLUMNS_ACTION_CREATOR\";\r\nconst ADD_ROWS_ACTION_CREATOR = \"ADD_ROWS_ACTION_CREATOR\";\r\nconst REMOVE_COLUMNS_ACTION_CREATOR = \"REMOVE_COLUMNS_ACTION_CREATOR\";\r\nconst REMOVE_ROWS_ACTION_CREATOR = \"REMOVE_ROWS_ACTION_CREATOR\";\r\nconst MOVE_MARKER_ACTION_CREATOR = \"MOVE_MARKER_ACTION_CREATOR\";\r\n\r\nconst initialState = {\r\n  fieldSizeX: 3,\r\n  fieldSizeY: 3,\r\n\r\n  markerPosition: [],\r\n  destinationPosition: [],\r\n\r\n  numberOfMoves: 10,\r\n  markerMoves: [],\r\n\r\n  isWin: false,\r\n  isGameOver: false,\r\n};\r\n\r\nfunction fieldReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case RESET_MARKER_POSITION:\r\n      //get two integers in a given range and set them in a new copy of state\r\n      let posX = getRandomIntInclusive(1, state.fieldSizeX);\r\n      let posY = getRandomIntInclusive(1, state.fieldSizeY);\r\n      return {\r\n        ...state,\r\n        markerPosition: [posX, posY],\r\n      };\r\n    case ADD_COLUMNS_ACTION_CREATOR:\r\n      return {\r\n        ...state,\r\n        fieldSizeX: state.fieldSizeX + 1,\r\n      };\r\n    case ADD_ROWS_ACTION_CREATOR:\r\n      return {\r\n        ...state,\r\n        fieldSizeY: state.fieldSizeY + 1,\r\n      };\r\n    case REMOVE_COLUMNS_ACTION_CREATOR:\r\n      return {\r\n        ...state,\r\n        fieldSizeX: state.fieldSizeX - 1,\r\n      };\r\n    case REMOVE_ROWS_ACTION_CREATOR:\r\n      return {\r\n        ...state,\r\n        fieldSizeY: state.fieldSizeY - 1,\r\n      };\r\n\r\n    case MOVE_MARKER_ACTION_CREATOR:\r\n      let destPos = state.markerPosition.slice();\r\n      let moves = [];\r\n      for (let i = 0; i < state.numberOfMoves; i++) {\r\n        let move = getRandomIntInclusive(1, 4);\r\n\r\n        if (move === 1) {\r\n          if (destPos[1] >= 1 && destPos[1] < state.fieldSizeY) {\r\n            destPos[1] += 1;\r\n            // moves.push(\"down\");\r\n            moves.push(\"‚¨áÔ∏è\");\r\n          } else if (destPos[1] > 1 && destPos[1] <= state.fieldSizeY) {\r\n            destPos[1] -= 1;\r\n            // moves.push(\"up\");\r\n            moves.push(\"‚¨ÜÔ∏è\");\r\n          }\r\n        } else if (move === 2) {\r\n          if (destPos[1] > 1 && destPos[1] <= state.fieldSizeY) {\r\n            destPos[1] -= 1;\r\n            // moves.push(\"up\");\r\n            moves.push(\"‚¨ÜÔ∏è\");\r\n          } else if (destPos[1] >= 1 && destPos[1] < state.fieldSizeY) {\r\n            destPos[1] += 1;\r\n            // moves.push(\"down\");\r\n            moves.push(\"‚¨áÔ∏è\");\r\n          }\r\n        } else if (move === 3) {\r\n          if (destPos[0] < state.fieldSizeX && destPos[0] >= 1) {\r\n            destPos[0] += 1;\r\n            // moves.push(\"right\");\r\n            moves.push(\"‚û°Ô∏è\");\r\n          } else if (destPos[0] > 1 && destPos[0] <= state.fieldSizeX) {\r\n            destPos[0] -= 1;\r\n            // moves.push(\"left\");\r\n            moves.push(\"‚¨ÖÔ∏è\");\r\n          }\r\n        } else if (move === 4) {\r\n          if (destPos[0] > 1 && destPos[0] <= state.fieldSizeX) {\r\n            destPos[0] -= 1;\r\n            // moves.push(\"left\");\r\n            moves.push(\"‚¨ÖÔ∏è\");\r\n          } else if (destPos[0] < state.fieldSizeX && destPos[0] >= 1) {\r\n            destPos[0] += 1;\r\n            // moves.push(\"right\");\r\n            moves.push(\"‚û°Ô∏è\");\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        markerMoves: moves.slice(),\r\n        destinationPosition: destPos.slice(),\r\n      };\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport function resetMarkerPositionActionCreator() {\r\n  return {\r\n    type: RESET_MARKER_POSITION,\r\n  };\r\n}\r\n\r\nexport function addColumnsActionCreator() {\r\n  return {\r\n    type: ADD_COLUMNS_ACTION_CREATOR,\r\n  };\r\n}\r\nexport function addRowsActionCreator() {\r\n  return {\r\n    type: ADD_ROWS_ACTION_CREATOR,\r\n  };\r\n}\r\nexport function removeColumnsActionCreator() {\r\n  return {\r\n    type: REMOVE_COLUMNS_ACTION_CREATOR,\r\n  };\r\n}\r\nexport function removeRowsActionCreator() {\r\n  return {\r\n    type: REMOVE_ROWS_ACTION_CREATOR,\r\n  };\r\n}\r\n\r\nexport function moveMarkerActionCreator() {\r\n  return {\r\n    type: MOVE_MARKER_ACTION_CREATOR,\r\n  };\r\n}\r\n\r\nexport default fieldReducer;\r\n","import React, { useState } from \"react\";\r\nimport Title from \"../Title/Title\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  resetMarkerPositionActionCreator,\r\n  addColumnsActionCreator,\r\n  addRowsActionCreator,\r\n  removeColumnsActionCreator,\r\n  removeRowsActionCreator,\r\n  moveMarkerActionCreator,\r\n} from \"../../store/reducers/fieldReducer\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nfunction Field(props) {\r\n  const [isGameStarted, setGameStarted] = useState(false);\r\n\r\n  const [attempt, setAttempt] = useState(1);\r\n\r\n  const handleAttempt = () => {\r\n    setAttempt(0);\r\n    console.log(\"attempt left\");\r\n    console.log(attempt);\r\n  };\r\n\r\n  //create an array and push components  in it\r\n  let titles = [];\r\n  for (let y = 1; y <= props.state.fieldSizeY; y++) {\r\n    for (let x = 1; x <= props.state.fieldSizeX; x++) {\r\n      titles.push(\r\n        <Title\r\n          key={x + \"\" + y}\r\n          value={x + \"\" + y}\r\n          isMarker={x + \"\" + y === props.state.markerPosition.join(\"\")}\r\n          destination={props.state.destinationPosition.join(\"\")}\r\n          handleAttempt={handleAttempt}\r\n          isGameStarted={isGameStarted}\r\n          attempt={attempt}\r\n          isDestination={\r\n            x + \"\" + y === props.state.destinationPosition.join(\"\")\r\n          }\r\n        ></Title>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button\r\n        disabled={isGameStarted && attempt}\r\n        onClick={() => {\r\n          props.resetMarkerPosition();\r\n          props.moveMarker();\r\n          setGameStarted(true);\r\n          setAttempt(1);\r\n        }}\r\n      >\r\n        Start new game!\r\n      </Button>\r\n\r\n      <FieldContainer\r\n        fieldSizeX={props.state.fieldSizeX}\r\n        fieldSizeY={props.state.fieldSizeY}\r\n      >\r\n        {titles.map((title) =>\r\n          title.value === title.destination\r\n            ? { ...title, isDestination: true }\r\n            : { ...title, isDestination: false }\r\n        )}\r\n      </FieldContainer>\r\n      <div style={{ fontSize: \"1.5em\" }}>\r\n        {props.state.markerMoves.join(\"\")}\r\n      </div>\r\n      <div>\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          disabled={attempt}\r\n          onClick={props.addColumns}\r\n        >\r\n          add cols\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          disabled={attempt}\r\n          onClick={props.addRows}\r\n        >\r\n          add rows\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          disabled={attempt}\r\n          onClick={props.removeColumns}\r\n        >\r\n          remove cols\r\n        </Button>\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          disabled={attempt}\r\n          onClick={props.removeRows}\r\n        >\r\n          remove rows\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//render a given number of columns and rows (get them from props)\r\nconst FieldContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => props.fieldSizeX}, 80px);\r\n  grid-template-rows: repeat(${(props) => props.fieldSizeY}, 1fr);\r\n  grid-gap: 5px;\r\n  justify-content: center;\r\n  margin: 1em;\r\n`;\r\n\r\n//pass state to props\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state,\r\n  };\r\n};\r\n\r\n//pass callbacks to props\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    resetMarkerPosition: () => {\r\n      dispatch(resetMarkerPositionActionCreator());\r\n    },\r\n    addColumns: () => {\r\n      dispatch(addColumnsActionCreator());\r\n    },\r\n    addRows: () => {\r\n      dispatch(addRowsActionCreator());\r\n    },\r\n    removeColumns: () => {\r\n      dispatch(removeColumnsActionCreator());\r\n    },\r\n    removeRows: () => {\r\n      dispatch(removeRowsActionCreator());\r\n    },\r\n    moveMarker: () => {\r\n      dispatch(moveMarkerActionCreator());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Field);\r\n","import { createStore } from \"redux\";\r\nimport fieldReducer from \"./reducers/fieldReducer\";\r\n\r\n//create the store\r\nconst store = createStore(fieldReducer);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import \"./App.css\";\nimport Field from \"./components/Field/Field\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/reduxStore\";\n\n//render the app and provide it with a store\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <div className=\"containerSecondary\">\n          <h1>Guess the title</h1>\n          <h4>\n            There is a hidden marker in one of the titles. Try to guess where it\n            is. Start count your steps from üèÅ\n          </h4>\n        </div>\n\n        <Field></Field>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}